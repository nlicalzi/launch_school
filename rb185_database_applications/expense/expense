#! /usr/bin/env ruby
require "pg"

def format_row(tuple)
  features = [ tuple["id"],
               tuple["created_on"],
               tuple["amount"].rjust(12),
               tuple["memo"] ]

  puts features.join(" | ")
end

def display_records
  db = PG.connect(dbname: "expenses")

  result = db.exec("SELECT * FROM expenses ORDER BY created_on ASC;")

  result.each do |tuple|
    format_row(tuple)
  end
end

def add_record(amount, memo)
  unless amount && memo
    puts "You must provide an amount and memo."
  else
    db = PG.connect(dbname: "expenses")
    db.exec("INSERT INTO expenses (amount, memo) VALUES (#{amount}, '#{memo}');")
  end
end


def display_help
  puts <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HELP
end

input_command, *input_args = ARGV

case input_command
when nil
  display_help
when "list"
  display_records
when "add"
  add_record(input_args[0], input_args[1])
end