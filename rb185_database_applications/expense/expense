#! /usr/bin/env ruby
require "pg"

CONNECTION = PG.connect(dbname: "expenses")

def format_row(tuple)
  features = [ tuple["id"],
               tuple["created_on"],
               tuple["amount"].rjust(12),
               tuple["memo"] ]

  puts features.join(" | ")
end

def display_records
  result = CONNECTION.exec("SELECT * FROM expenses ORDER BY created_on ASC;")

  result.each do |tuple|
    format_row(tuple)
  end
end

def add_expense(amount, memo)
  sql = "INSERT INTO expenses (amount, memo) VALUES ($1, $2);"
  CONNECTION.exec_params(sql, [amount, memo]) 
end


def display_help
  puts <<~HELP
    An expense recording system

    Commands:

    add AMOUNT MEMO [DATE] - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
  HELP
end

input_command, *input_args = ARGV

case input_command
when nil
  display_help
when "list"
  display_records
when "add"
  amount = input_args[0]
  memo   = input_args[1]
  abort "You must provide an amount and memo." unless amount && memo

  add_expense(amount, memo)
end