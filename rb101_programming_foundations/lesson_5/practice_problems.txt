Practice Problems: Sorting, Nested Collections and Working with Blocks
Source: https://launchschool.com/lessons/c53f2250/assignments/f524e910

Problem 1:
Q: How would you order this array of number strings by descending numeric value?
   arr = ['10', '11', '9', '7', '8']
A:
  arr.sort do |x,y|
    y.to_i <=> x.to_i # element-wise comparison for integers
  end

Problem 2:
Q: How would you order this array of hashes based on the year of publication of
   each book, from the earliest to the latest?

  books = [
    {title: 'One Hundred Years of Solitude', author: 'Gabriel Garcia Marquez', published: '1967'},
    {title: 'The Great Gatsby', author: 'F. Scott Fitzgerald', published: '1925'},
    {title: 'War and Peace', author: 'Leo Tolstoy', published: '1869'},
    {title: 'Ulysses', author: 'James Joyce', published: '1922'}
  ]

A:
  books.sort do |x,y|
    x[:published] <=> y[:published]
  end

  OR

  books.sort_by do |book|
    book[:published]
  end

Problem 3:
Q: For each of these collection objects demonstrate how you would reference the letter 'g'.

  arr1 = ['a', 'b', ['c', ['d', 'e', 'f', 'g']]]
    A: arr1[2][1][3]

  arr2 = [{first: ['a', 'b', 'c'], second: ['d', 'e', 'f']}, {third: ['g', 'h', 'i']}]
    A: arr2[1].values[0][0]

  arr3 = [['abc'], ['def'], {third: ['ghi']}]
    A: arr3[2].values[0][0].chr

  hsh1 = {'a' => ['d', 'e'], 'b' => ['f', 'g'], 'c' => ['h', 'i']}
    A: hsh1['b'][1]

  hsh2 = {first: {'d' => 3}, second: {'e' => 2, 'f' => 1}, third: {'g' => 0}}
    A: hsh2[:third].keys[0]

Problem 4:
Q: For each of these collection objects where the value 3 occurs, demonstrate
   how you would change this to 4.

  arr1 = [1, [2, 3], 4]
    A: arr1[1][1] = 4

  arr2 = [{a: 1}, {b: 2, c: [7, 6, 5], d: 4}, 3]
    A: arr2[2] = 4

  hsh1 = {first: [1, 2, [3]]}
    A: hsh1[:first][2][0] = 4

  hsh2 = {['a'] => {a: ['1', :two, 3], b: 4}, 'b' => 5}
    A: hsh2[['a']][:a][2] = 4

Problem 5:
Q: Given this nested Hash, figure out the total age of just the male members of
   the family.

   munsters = {
     "Herman" => { "age" => 32, "gender" => "male" },
     "Lily" => { "age" => 30, "gender" => "female" },
     "Grandpa" => { "age" => 402, "gender" => "male" },
     "Eddie" => { "age" => 10, "gender" => "male" },
     "Marilyn" => { "age" => 23, "gender" => "female"}
   }

A:
  munsters.map do |k,v|
    if v['gender'] == 'male'
      v['age']
    else
      0
    end
  end.sum

Problem 6:
Q: Given the previously seen family hash, print out the name, age and gender of
   each family member.

A:
  munsters.each do |person, details|
    puts "#{person} is a #{details['age']}-year-old #{details['gender']}"
  end

Problem 7:
Q: Given this code, what would be the final values of a and b? Try to work this
   out without running the code.
A:
  a = 2
  b = [5, 8]
  arr = [a, b] # => [2, [5, 8]]

  arr[0] += 2
    #=> [4, [5, 8]] Reassignment is non-mutating. Arr index 0 changes but A doesn't
  arr[1][0] -= a
    # => [4, [3, 8]]
