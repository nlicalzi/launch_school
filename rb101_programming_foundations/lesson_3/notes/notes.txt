Revised Notes

String substitution -- String#gsub (global substitution)
  String substitution-- "white chocolate".gsub("white", "dark")
  Regex substitution-- "a1".gsub(/\d/, "2") => a2 (find digit-- '\d')
  Optional inplace: gsub!

String case (upcase, downcase, capitalize, swapcase, )

String booleans (end_with?, include?, start_with?, )

String indexing (index, insert, )

String summary (length, size, )

String modification(reverse, slice, split, strip, gsub, sub,  )

***

Original Notes

#gsub! for replacing substrings in strings

Hash#assoc for collecting key/value pair where key matches argument

How can we test if a key is included in a hash? (Hash#has_key? / Hash#include? / Hash#key?)

Hash#merge will interleave new key/value pairs to a hash

String#index will return the left-index of a substring, use w/ String#slice

I should consider making cards for various methods on String, Hash, Array, Numeric, etc...

Enumerable.inject // Enumerable.reduce

String#tr

Integer.divmod

String#prepend (mutating methods-> String, Array, Hash)

Ruby 'spaceship' operator: <=>

What do String#ord and Integer#chr have to do with each other?

Kernel#format

Map(&:to_i) // higher order functions with procs

multiple-assignment syntax
  a, b = b, a

Hash::new --> Different ways to initialize a hash with default values

String#delete and its companion String#count

Enumerable#sort_by
